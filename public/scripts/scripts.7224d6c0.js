!function(){"use strict";angular.module("shipping",["ngMaterial","ngCookies","ngResource","ngRoute","ngSanitize","ui.router"]).value("options",{api:{order:"/api/orders/",company:"/api/companies/",item:"/api/items/"}}).config(["$stateProvider","$urlRouterProvider","$mdThemingProvider","$mdIconProvider",function(a,b,c,d){b.otherwise("/"),a.state("orders",{url:"/:mode",templateUrl:"views/orders.html"}).state("company",{url:"/company/:company",templateUrl:"views/orders.html"}),d.defaultIconSet("./assets/svg/avatars.svg",128).icon("menu","./assets/svg/menu.svg",24).icon("share","./assets/svg/share.svg",24).icon("google_plus","./assets/svg/google_plus.svg",512).icon("hangouts","./assets/svg/hangouts.svg",512).icon("twitter","./assets/svg/twitter.svg",512).icon("phone","./assets/svg/phone.svg",512),c.theme("default").primaryPalette("brown").accentPalette("red")}])}(),function(){"use strict";function a(a,b,c,d,e){this.$rootScope=a,this.CompanyService=b,this.$mdBottomSheet=c,this.$mdSidenav=d,this.$q=e,this.companies=[],this.load()}angular.module("shipping").controller("IndexCtrl",["$rootScope","CompanyService","$mdBottomSheet","$mdSidenav","$q",a]),a.prototype.load=function(){var a=this;a.CompanyService.find().success(function(b){a.companies=b}).error(function(a){console.error("An error happened while loading companies:",a)})},a.prototype.toggleList=function(){var a=this,b=a.$mdBottomSheet.hide()||a.$q.when(!0);b.then(function(){a.$mdSidenav("left").toggle()})},a.prototype.selectCompany=function(a){this.selected=a},a.prototype.showAddDialog=function(a){this.$rootScope.$broadcast("show:addOrder",a)}}(),function(){"use strict";function a(a,b,c,d,e,f){var g=this;this.$stateParams=c,this.OrderService=d,this.CompanyService=e,this.$mdDialog=f,this.orders=[],this.allOrders=[],this.addresses=[],this.items=[],b.$on("select:company",function(a,b){g.orders=b}),b.$on("show:addOrder",function(a,b){g.showAddDialog(b)}),a.$watch(function(){return g.selectedAddress},function(a){console.log("New Address got selected:",a),a&&(g.mode="orders",g.findByAddress(a))}),this.mode=c.mode||"orders","items"===this.mode?this.loadItems():this.load(),this.loadAddresses()}angular.module("shipping").controller("OrderCtrl",["$scope","$rootScope","$stateParams","OrderService","CompanyService","$mdDialog",a]),a.prototype.load=function(){this.$stateParams.company?this.selectCompany(this.$stateParams.company):this.loadAll()},a.prototype.selectCompany=function(a){var b=this;this.mode="orders",b.selected=a,b.CompanyService.findOrders(a).success(function(a){b.orders=a}).error(function(a){console.error("An error happened while loading companies:",a)})},a.prototype.loadAll=function(){var a=this;a.OrderService.find().success(function(b){a.orders=b,a.allOrders=b}).error(function(a){console.error("An error happened while loading orders:",a)})},a.prototype.loadAddresses=function(){var a=this;a.OrderService.findAddresses().success(function(b){a.addresses=b}).error(function(a){console.error("An error happened while loading addresses:",a)})},a.prototype.findByAddress=function(a){var b=this;b.OrderService.findByAddress(a).success(function(a){b.orders=a}).error(function(a){console.error("An error happened while loading orders:",a)})},a.prototype.loadItems=function(){var a=this;a.OrderService.findItems().success(function(b){a.items=b}).error(function(a){console.error("An error happened while loading orders:",a)})},a.prototype.addOrder=function(a){var b=this;a.orderId||(a.orderId=b.allOrders.length+1),b.OrderService.create(a).success(function(a){b.load(),b.loadItems(),console.log("New Order just got created:",a)}).error(function(a){console.error("An error happened while creating a new order:",a)})},a.prototype.deleteOrder=function(a){this.OrderService.remove(a._id).success(function(){console.log("An Order just got removed:",a)}).error(function(a){console.error("An error happened while removing an order:",a)})},a.prototype.showAddDialog=function(a){var b=this;this.$mdDialog.show({templateUrl:"views/add-order-dialog.html",parent:angular.element(document.body),targetEvent:a}).then(function(a){console.log("newOrder:",a),b.addOrder(a)},function(){console.log("You cancelled the dialog.")})}}(),function(){"use strict";function a(a,b){this.$rootScope=a,this.$mdDialog=b,this.items=["Macbook",'Book "Guide to Hamburg"','Book "Cooking 101"',"Inline Skates","Playstation","Flux compensator"],this.companies=["SuperTrader","Cheapskates","MegaCorp","Google","Apple","Samsung"]}angular.module("shipping").controller("AddOrderDialogCtrl",["$rootScope","$mdDialog",a]),a.prototype.hide=function(){this.$mdDialog.hide()},a.prototype.cancel=function(){this.$mdDialog.cancel()},a.prototype.ok=function(){this.$mdDialog.hide(this.order)}}(),function(){"use strict";function a(a,b){return{find:function(){return a.get(b.api.order)},findByAddress:function(c){return a.get(b.api.order+"from/"+c)},findAddresses:function(){return a.get(b.api.order+"addresses")},findOne:function(c){return a.get(b.api.order+c)},create:function(c){return a.post(b.api.order,c)},update:function(c){return a.put(b.api.order+c._id,c)},remove:function(c){return a["delete"](b.api.order+c)},findItems:function(){return a.get(b.api.item)}}}angular.module("shipping").factory("OrderService",["$http","options",a])}(),function(){"use strict";function a(a,b){return{find:function(){return a.get(b.api.company)},findOrders:function(c){return a.get(b.api.company+c)}}}angular.module("shipping").factory("CompanyService",["$http","options",a])}();